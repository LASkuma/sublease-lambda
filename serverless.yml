service: sublease-lambda

plugins:
  - serverless-webpack
  - serverless-offline

provider:
  name: aws
  runtime: nodejs8.10

  stage: ${ opt:stage, 'development'}
  region: ${ self:custom.GLOBAL_CONFIG.AWS_REGION }
  
  environment:
    NODE_ENV: ${ self:provider.stage }

custom:
  # Setup serverless plugins
  webpack:
    webpackConfig: ./configs/webpack/${ self:provider.stage }.config.js
    includeModules: true
  serverless-offline:
    port: 3000
    babelOptions:
      plugins: ["transform-es2015-modules-commonjs", "transform-object-rest-spread"]
  
  # Define configs
  GLOBAL_CONFIG: ${ file(./configs/config.global.json) }
  ENV_CONFIG: ${ file(./configs/config.env.json):${ self:provider.stage } }

functions:
  hello:
    handler: handler.hello
    events:
      - http:
          path: hello
          method: GET

resources:
  Resources:
    PostTable:
      Type: AWS::DynamoDB::Table
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        TableName: ${ self:provider.stage }-${ self:custom.GLOBAL_CONFIG.RESOURCE_NAMES.PostTable }
